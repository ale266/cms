<////  LISTA DE COMANDOS   ////>

<//// para ejecutar ambiente de desarrollo
python manage.py runserver --settings=cms.settings.development 
User: Alexis        Password: equipo10

<//// para ejecutar ambiente de produccion
python manage.py collectstatic --settings=cms.settings.production </// para coleccionar archivos estaticos en produccion, si hay cambios
python manage.py makemigrations --settings=cms.settings.production
python manage.py migrate --settings=cms.settings.production </// para migrar todas las tablas en produccion, si hay cambios en las tablas
python manage.py createsuperuser --settings=cms.settings.production
python manage.py runserver --settings=cms.settings.production  <//// para ejecutar ambiente de produccion sin web service
uvicorn cms.asgi:application --host 127.0.0.1 --port 8000 --reload <//// ejecutar uvicorn asgi (servidor web asincrono)


gunicorn --env DJANGO_SETTINGS_MODULE=cms.settings.production cms.wsgi:application --bind 127.0.0.1:8000 <//// gunicorn no tiene soporte en windows, pero se podria hacer funcionar en un contenedor linux con docker



Docker

docker build -t ale/cms .
docker run -p 8000:8000 ale/cms 
Restar-Service LxxsManager

docker compose up --build



python -m django_pydoc.py -b <////  DOCUMENTATION
sphinx-apidoc -o source/modules ..    <////  DOCUMENTATION
make html <////  DOCUMENTATION

ingresar a la carpeta donde estan los test y ejecutar en consola: pytest <////  Test



python -Xutf8 ./manage.py dumpdata --indent 2 > data.json --settings=cms.settings.production  <////  para exportar database 
python -Xutf8 ./manage.py loaddata data.json --settings=cms.settings.production  <////  para importar database 